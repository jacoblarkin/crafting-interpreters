void* dispatch_table[] = {
  [OP_CONSTANT] = &&BC_CONSTANT,
  [OP_NIL] = &&BC_NIL,
  [OP_TRUE] = &&BC_TRUE,
  [OP_FALSE] = &&BC_FALSE,
  [OP_POP] = &&BC_POP,
  [OP_GET_LOCAL] = &&BC_GET_LOCAL,
  [OP_SET_LOCAL] = &&BC_SET_LOCAL,
  [OP_GET_GLOBAL] = &&BC_GET_GLOBAL,
  [OP_DEFINE_GLOBAL] = &&BC_DEFINE_GLOBAL,
  [OP_SET_GLOBAL] = &&BC_SET_GLOBAL,
  [OP_GET_UPVALUE] = &&BC_GET_UPVALUE,
  [OP_SET_UPVALUE] = &&BC_SET_UPVALUE,
  [OP_GET_PROPERTY] = &&BC_GET_PROPERTY,
  [OP_SET_PROPERTY] = &&BC_SET_PROPERTY,
  [OP_GET_SUPER] = &&BC_GET_SUPER,
  [OP_EQUAL] = &&BC_EQUAL,
  [OP_GREATER] = &&BC_GREATER,
  [OP_LESS] = &&BC_LESS,
  [OP_ADD] = &&BC_ADD,
  [OP_SUBTRACT] = &&BC_SUBTRACT,
  [OP_MULTIPLY] = &&BC_MULTIPLY,
  [OP_DIVIDE] = &&BC_DIVIDE,
  //[OP_TERNARY] = &&BC_TERNARY,
  [OP_NOT] = &&BC_NOT,
  [OP_NEGATE] = &&BC_NEGATE,
  [OP_PRINT] = &&BC_PRINT,
  [OP_JUMP] = &&BC_JUMP,
  [OP_JUMP_IF_FALSE] = &&BC_JUMP_IF_FALSE,
  [OP_LOOP] = &&BC_LOOP,
  [OP_CALL] = &&BC_CALL,
  [OP_INVOKE] = &&BC_INVOKE,
  [OP_SUPER_INVOKE] = &&BC_SUPER_INVOKE,
  [OP_CLOSURE] = &&BC_CLOSURE,
  [OP_CLOSE_UPVALUE] = &&BC_CLOSE_UPVALUE,
  [OP_RETURN] = &&BC_RETURN,
  [OP_CLASS] = &&BC_CLASS,
  [OP_INHERIT] = &&BC_INHERIT,
  [OP_METHOD] = &&BC_METHOD
};

